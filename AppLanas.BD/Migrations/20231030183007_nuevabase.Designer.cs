// <auto-generated />
using System;
using AppLanas.BD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppLanas.BD.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231030183007_nuevabase")]
    partial class nuevabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("porcentajeGanancia")
                        .HasColumnType("Decimal(10,2)");

                    b.Property<decimal>("precioProducto")
                        .HasColumnType("Decimal(10,2)");

                    b.Property<decimal>("precioProveedor")
                        .HasColumnType("Decimal(10,2)");

                    b.HasKey("id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.ProductoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("ProductoVentas");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CajaId")
                        .HasColumnType("int");

                    b.Property<int>("idCaja")
                        .HasColumnType("int");

                    b.Property<decimal>("totalGanancia")
                        .HasColumnType("Decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.ProductoVenta", b =>
                {
                    b.HasOne("AppLanas.BD.Data.Entity.Producto", "Producto")
                        .WithMany("ProductoVentas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppLanas.BD.Data.Entity.Venta", "Venta")
                        .WithMany("ProductoVentas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Venta", b =>
                {
                    b.HasOne("AppLanas.BD.Data.Entity.Caja", "Caja")
                        .WithMany("Ventas")
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Caja", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Producto", b =>
                {
                    b.Navigation("ProductoVentas");
                });

            modelBuilder.Entity("AppLanas.BD.Data.Entity.Venta", b =>
                {
                    b.Navigation("ProductoVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
